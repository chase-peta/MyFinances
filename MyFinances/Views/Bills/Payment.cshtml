@model MyFinances.Models.BillPayment

@{ ViewBag.Title = ViewBag.Action + " - " + Model.Bill.Name + " Bill"; }

<div class="clear-after">
    <div class="pull-right">
        @Html.ActionLink("Back to Bill", "Details", new { id = Model.Bill.ID }, new { @class = "btn btn-danger" })
    </div>
    <h1>@ViewBag.Title</h1>
</div>

@section Form {
    @Html.HiddenFor(model => model.ID)
    <input type="hidden" name="billPaymentId" id="billPaymentId" value="@Model.ID" />

    <div class="update-form alert-info">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.DatePaid, new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(model => model.DatePaid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DatePaid)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payee, new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(model => model.Payee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Payee)
        </div>
        <div class="clearfix"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { htmlAttributes = new { @class = "control-label" } })
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount)
        </div>
    </div>
}

@section Payees {
    <div class="update-form alert-info">
        @if ((ViewBag.Users as List<MyFinances.Models.ApplicationUser>).Any())
        {
            <div class="selectPayees">
                <h4>Select Payees</h4>
                @if ((ViewBag.Users as List<MyFinances.Models.ApplicationUser>).Any())
                {
                    foreach (MyFinances.Models.ApplicationUser user in ViewBag.Users)
                    {
                        var shared = Model.SharedWith.ToList().Find(x => x.SharedWithUser.Id == user.Id);
                        bool userCheck = shared != null || ViewBag.Action == "Add Payment";
                        var percent = (shared != null ? shared.SharedPercentage : Model.Bill.SharedWith.Where(x => x.SharedWithUser.Id == user.Id).FirstOrDefault().SharedPercentage);
                        
                        @Html.Partial("_SharedUser", user, new ViewDataDictionary { { "userCheck", userCheck }, { "percent", percent }, { "sharedPercentage", ViewBag.SharedPercentage } })
                    }
                }
            </div>
        }
    </div>
}

@section BelowForm {
    <input type="submit" value="Save" class="btn btn-primary pull-right" />

    @if (ViewBag.Action == "Edit Payment")
    {
        @Html.ActionLink("Delete Payment", "DeletePayment", new { id = Model.ID }, new
        {
            @class = "btn btn-danger confirmation",
            data_confirm_title = "Delete this payment for " + Model.Bill.Name + " Bill",
            data_confirm_message = "Are you sure you want to delete this payment for " + Model.Bill.Name + " Bill?",
            data_confirm_style = "danger",
            data_toggle = "tooltip",
            data_placement = "right",
            title = "This will delete this 1 payment."
        })
    }
}

@section Section2 {
    @Html.Partial("_BillInfo", Model.Bill)
}

@section Section3 {
    @Html.Partial("_PaymentAverage", Model.Bill)
}
