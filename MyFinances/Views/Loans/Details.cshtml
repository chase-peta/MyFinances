@model MyFinances.Models.Loan

@{ ViewBag.Title = ((ViewBag.Action != "Create") ? Model.Name : ViewBag.Action) + " Loan"; }

<div class="clear-after">
    <div class="pull-right">
        @if (ViewBag.Action == "Edit")
        {
            @Html.ActionLink("Back to Loan", "Details", new { ID = Model.ID }, new { @class = "btn btn-danger" })
        }
        else
        {
            @Html.ActionLink("Back to all Loans", "Index", null, new { @class = "btn btn-primary" })
        }
    </div>
    <h1>@ViewBag.Title</h1>
</div>

@if (ViewBag.Action != "Details")
{
    @section Form {
        @Html.HiddenFor(model => model.ID)
        <div class="update-form standard">

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.Name, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.FirstPaymentDate, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.FirstPaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstPaymentDate)
                </div>
                <div class="clearfix"></div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoanAmount)
                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.Term, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Term)
                </div>
                <div class="clearfix"></div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.InterestRate, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterestRate)
                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.Additional, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.Additional, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Additional)
                </div>
                <div class="clearfix"></div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.Escrow, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.Escrow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Escrow)
                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.InterestCompound, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EnumDropDownListFor(model => model.InterestCompound, "Select Interest Compound", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InterestCompound)
                </div>
                <div class="clearfix"></div>

                <div class="form-group col-xs-12 col-lg-6">
                    @Html.LabelFor(model => model.PaymentInterestRate, new { htmlAttributes = new { @class = "control-label" } })
                    @Html.EditorFor(model => model.PaymentInterestRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentInterestRate)
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    }

    @section Payees {
        <div class="update-form standard">
            <div class="form-check">
                @Html.EditorFor(model => model.IsShared, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.IsShared, new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.IsShared)
            </div>

            <div class="selectPayees" style="@(!Model.IsShared ? "display: none;" : "")">
                <h4>Select Payees</h4>
                @if ((ViewBag.Users as List<MyFinances.Models.ApplicationUser>).Any() && Model.SharedWith != null)
                {
                    foreach (MyFinances.Models.ApplicationUser user in ViewBag.Users)
                    {
                        var shared = Model.SharedWith.ToList().Find(x => x.SharedWithUser.Id == user.Id);
                        bool userCheck = shared != null;
                        var percent = (userCheck ? shared.SharedPercentage : MyFinances.Models.SharedPercentage.Half);

                        @Html.Partial("_SharedUser", user, new ViewDataDictionary { { "userCheck", userCheck }, { "percent", percent }, { "sharedPercentage", ViewBag.SharedPercentage } })
                    }
                }
            </div>
        </div>
    }

    @section BelowForm {
        <div class="pull-right">
            <input type="submit" name="button" value="Calculate" class="btn btn-success" />
            <input type="submit" name="button" value="Save" class="btn btn-primary" />
        </div>
       
        @if (ViewBag.Action == "Edit")
        {
            @Html.ActionLink("Deactivate", "Deactivate", new { id = Model.ID }, new
            {
                @class = "btn btn-danger confirmation",
                data_confirm_title = "Deactivate " + Model.Name + " Loan",
                data_confirm_message = "Are you sure you want to deactivate deactivate " + Model.Name + " Loan?",
                data_confirm_style = "danger",
                data_toggle = "tooltip",
                data_placement = "right",
                title = "Will set to NOT active - Payments will NOT be deleted"
            })
        }
    }
}
else
{
    @section Section1 {
        <div class="tab-content margin-bottom-20">
            <div class="table-container">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.FirstPaymentDate)</th>
                            <td>@Html.DisplayFor(model => model.FirstPaymentDate)</td>
                        </tr>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.LoanAmount)</th>
                            <td>@Html.DisplayFor(model => model.LoanAmount)</td>
                        </tr>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.InterestRate)</th>
                            <td>@Html.DisplayFor(model => model.InterestRate)</td>
                        </tr>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Term)</th>
                            <td>@Html.DisplayFor(model => model.Term)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    }

    @section BelowForm {
        @if (Model.IsActive && !Model.NotOwner)
        {
            <div class="pull-right">
                @Html.ActionLink("Add Payment", "AddPayment", new { ID = Model.ID }, new { @class = "btn btn-success" })
                @Html.ActionLink("Edit Loan", "Edit", new { ID = Model.ID }, new { @class = "btn btn-primary" })
            </div>
        }
        @if (!Model.IsActive)
        {
            @Html.ActionLink("Delete", "Delete", new { ID = Model.ID }, new
            {
                @class = "btn btn-danger confirmation pull-left",
                data_confirm_title = "Permanently Delete " + Model.Name + " Loan",
                data_confirm_message = "Are you sure you want to permanently delete " + Model.Name + " Loan?<br><strong>All payments will be deleted with deletion.</strong>",
                data_confirm_style = "danger",
                data_toggle = "tooltip",
                data_placement = "right",
                title = "Will delete - Payments WILL BE DELETED"
            })

            @Html.ActionLink("Activate", "Activate", new { ID = Model.ID }, new
            {
                @class = "btn btn-success confirmation",
                data_confirm_title = "Activate " + Model.Name + " Loan",
                data_confirm_message = "Are you sure you want to activate " + Model.Name + " Loan?",
                data_confirm_style = "success",
                data_toggle = "tooltip",
                data_placement = "left",
                title = "Set Active"
            });
        }
    }
}

@section Section2 {
    @Html.Partial("_LoanInfo")
}

@section Section3 {
    @Html.Partial("_PaymentOutlook")
}

